# VisionHub API Documentation

## Overview
This document provides a comprehensive guide to the VisionHub API endpoints, detailing their functionality, expected parameters, and response formats. The API is built with Laravel and follows RESTful principles, using JSON for data exchange.

## Base URL
- Development: `http://localhost:8000/api/v1`
- Production: `https://api.visionhub.com/api/v1`

## Authentication
All API requests require authentication via Sanctum tokens:
```
Authorization: Bearer {token}
Content-Type: application/json
Accept: application/json
```

## Admin Dashboard API
For admin dashboard API endpoints, please refer to the separate [Admin API Documentation](ADMIN-API-DOCUMENTATION.md).

## API Response Format

### Success Response
```json
{
  "success": true,
  "data": {},
  "message": "Operation successful",
  "meta": {
    "pagination": {},
    "timestamp": "2024-01-20T10:00:00Z"
  }
}
```

### Error Response
```json
{
  "success": false,
  "message": "Validation failed",
  "errors": {
    "field_name": ["Error message"]
  },
  "meta": {
    "timestamp": "2024-01-20T10:00:00Z"
  }
}
```

## Core API Endpoints

### Authentication Endpoints

#### POST /api/v1/auth/register
Registers a new user in the system.

**Request Body:**
```json
{
  "fullName": "John Doe",
  "username": "johndoe",
  "email": "john@example.com",
  "password": "password123",
  "confirmPassword": "password123",
  "packageId": "1",
  "referrerCode": "VH123456",
  "country": "Nigeria",
  "phone": "+2341234567890"
}
```

**Success Response (201):**
```json
{
  "success": true,
  "data": {
    "user": {
      "id": "1",
      "username": "johndoe",
      "email": "john@example.com",
      "fullName": "John Doe",
      "phone": "+2341234567890",
      "country": "Nigeria",
      "package": {
        "id": "1",
        "name": "Silver Package",
        "price": 5000,
        "benefits": ["Daily earnings up to ₦500", "Referral bonuses", "Access to marketplace"],
        "duration": 30
      },
      "referralCode": "VHABCDEF",
      "createdAt": "2024-01-20T10:00:00Z",
      "updatedAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Registration successful! Welcome to VisionHub!"
}
```

#### POST /api/v1/auth/login
Authenticates a user and returns an access token.

**Request Body:**
```json
{
  "username": "johndoe",
  "password": "password123"
}
```

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "user": {
      "id": "1",
      "username": "johndoe",
      "email": "john@example.com",
      "fullName": "John Doe",
      "phone": "+2341234567890",
      "country": "Nigeria",
      "package": {
        "id": "1",
        "name": "Silver Package",
        "price": 5000,
        "benefits": ["Daily earnings up to ₦500", "Referral bonuses", "Access to marketplace"],
        "duration": 30
      },
      "referralCode": "VHABCDEF",
      "createdAt": "2024-01-20T10:00:00Z",
      "updatedAt": "2024-01-20T10:00:00Z"
    },
    "token": "1|abcdefghijklmnopqrstuvwxyz123456"
  },
  "message": "Login successful"
}
```

#### POST /api/v1/auth/logout
Logs out the authenticated user.

**Success Response (200):**
```json
{
  "success": true,
  "message": "Successfully logged out"
}
```

#### GET /api/v1/auth/user
Retrieves the authenticated user's information.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "user": {
      "id": "1",
      "username": "johndoe",
      "email": "john@example.com",
      "fullName": "John Doe",
      "phone": "+2341234567890",
      "country": "Nigeria",
      "package": {
        "id": "1",
        "name": "Silver Package",
        "price": 5000,
        "benefits": ["Daily earnings up to ₦500", "Referral bonuses", "Access to marketplace"],
        "duration": 30
      },
      "referralCode": "VHABCDEF",
      "createdAt": "2024-01-20T10:00:00Z",
      "updatedAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "User data retrieved successfully"
}
```

#### PUT /api/v1/auth/profile
Updates the authenticated user's profile information.

**Request Body:**
```json
{
  "fullName": "John Smith",
  "phone": "+2341234567891",
  "country": "Ghana"
}
```

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "user": {
      "id": "1",
      "username": "johndoe",
      "email": "john@example.com",
      "fullName": "John Smith",
      "phone": "+2341234567891",
      "country": "Ghana",
      "package": {
        "id": "1",
        "name": "Silver Package",
        "price": 5000,
        "benefits": ["Daily earnings up to ₦500", "Referral bonuses", "Access to marketplace"],
        "duration": 30
      },
      "referralCode": "VHABCDEF",
      "createdAt": "2024-01-20T10:00:00Z",
      "updatedAt": "2024-01-20T11:00:00Z"
    }
  },
  "message": "Profile updated successfully"
}
```

### Dashboard Endpoints

#### GET /api/v1/dashboard/stats
Retrieves dashboard statistics for the authenticated user.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "stats": {
      "totalEarnings": 74349.00,
      "availableBalance": 12500.50,
      "pendingEarnings": 3200.75,
      "totalWithdrawals": 45600.25,
      "referralCount": 12,
      "activeAds": 5,
      "currency": "NGN"
    }
  },
  "message": "Dashboard stats retrieved successfully"
}
```

#### GET /api/v1/dashboard/earnings
Retrieves earnings history for the authenticated user.

**Query Parameters:**
- limit (optional): Number of records to return (default: 10)
- page (optional): Page number for pagination (default: 1)

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "earnings": [
      {
        "id": "1",
        "amount": 250.00,
        "source": "ad_view",
        "description": "Earning from Ad View",
        "date": "2024-01-20T08:00:00Z"
      },
      {
        "id": "2",
        "amount": 500.00,
        "source": "referral",
        "description": "New Referral Bonus",
        "date": "2024-01-20T05:00:00Z"
      }
    ]
  },
  "meta": {
    "pagination": {
      "total": 2,
      "count": 2,
      "per_page": 10,
      "current_page": 1,
      "total_pages": 1
    }
  },
  "message": "Earnings history retrieved successfully"
}
```

#### GET /api/v1/dashboard/notifications
Retrieves notifications for the authenticated user.

**Query Parameters:**
- limit (optional): Number of records to return (default: 10)
- page (optional): Page number for pagination (default: 1)

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "notifications": [
      {
        "id": "1",
        "userId": "1",
        "title": "Payment Received",
        "message": "You've received ₦250.00 from ad view",
        "type": "earning",
        "read": false,
        "createdAt": "2024-01-20T08:00:00Z"
      }
    ]
  },
  "meta": {
    "pagination": {
      "total": 1,
      "count": 1,
      "per_page": 10,
      "current_page": 1,
      "total_pages": 1
    }
  },
  "message": "Notifications retrieved successfully"
}
```

### Advertisements Endpoints

#### GET /api/v1/ads
Retrieves all available advertisements.

**Query Parameters:**
- category (optional): Filter by category
- limit (optional): Number of records to return (default: 10)
- page (optional): Page number for pagination (default: 1)

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "ads": [
      {
        "id": "1",
        "advertiserId": "advertiser1",
        "title": "Invest in Cryptocurrency",
        "description": "Start your crypto journey with our secure platform. Get ₦1000 bonus on signup!",
        "imageUrl": "https://api.visionhub.com/storage/ads/1/image.jpg",
        "targetUrl": "https://crypto-platform.com",
        "category": "finance",
        "budget": 100000,
        "spent": 25000,
        "impressions": 5000,
        "clicks": 250,
        "status": "active",
        "startDate": "2024-01-01T00:00:00Z",
        "endDate": "2024-02-01T00:00:00Z",
        "createdAt": "2024-01-01T00:00:00Z"
      }
    ]
  },
  "meta": {
    "pagination": {
      "total": 1,
      "count": 1,
      "per_page": 10,
      "current_page": 1,
      "total_pages": 1
    }
  },
  "message": "Advertisements retrieved successfully"
}
```

#### POST /api/v1/ads
Creates a new advertisement (requires admin privileges).

**Request Body:**
```json
{
  "title": "New Advertisement",
  "description": "Description of the advertisement",
  "imageUrl": "https://example.com/image.jpg",
  "targetUrl": "https://target-website.com",
  "category": "technology",
  "budget": 50000,
  "startDate": "2024-01-20T00:00:00Z",
  "endDate": "2024-02-20T00:00:00Z"
}
```

**Success Response (201):**
```json
{
  "success": true,
  "data": {
    "ad": {
      "id": "2",
      "advertiserId": "1",
      "title": "New Advertisement",
      "description": "Description of the advertisement",
      "imageUrl": "https://api.visionhub.com/storage/ads/2/image.jpg",
      "targetUrl": "https://target-website.com",
      "category": "technology",
      "budget": 50000,
      "spent": 0,
      "impressions": 0,
      "clicks": 0,
      "status": "active",
      "startDate": "2024-01-20T00:00:00Z",
      "endDate": "2024-02-20T00:00:00Z",
      "createdAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Advertisement created successfully"
}
```

#### GET /api/v1/ads/{id}
Retrieves a specific advertisement by ID.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "ad": {
      "id": "1",
      "advertiserId": "advertiser1",
      "title": "Invest in Cryptocurrency",
      "description": "Start your crypto journey with our secure platform. Get ₦1000 bonus on signup!",
      "imageUrl": "https://api.visionhub.com/storage/ads/1/image.jpg",
      "targetUrl": "https://crypto-platform.com",
      "category": "finance",
      "budget": 100000,
      "spent": 25000,
      "impressions": 5000,
      "clicks": 250,
      "status": "active",
      "startDate": "2024-01-01T00:00:00Z",
      "endDate": "2024-02-01T00:00:00Z",
      "createdAt": "2024-01-01T00:00:00Z"
    }
  },
  "message": "Advertisement retrieved successfully"
}
```

#### PUT /api/v1/ads/{id}
Updates an existing advertisement (requires admin privileges).

**Request Body:**
```json
{
  "title": "Updated Advertisement",
  "description": "Updated description of the advertisement",
  "budget": 75000
}
```

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "ad": {
      "id": "1",
      "advertiserId": "advertiser1",
      "title": "Updated Advertisement",
      "description": "Updated description of the advertisement",
      "imageUrl": "https://api.visionhub.com/storage/ads/1/image.jpg",
      "targetUrl": "https://crypto-platform.com",
      "category": "finance",
      "budget": 75000,
      "spent": 25000,
      "impressions": 5000,
      "clicks": 250,
      "status": "active",
      "startDate": "2024-01-01T00:00:00Z",
      "endDate": "2024-02-01T00:00:00Z",
      "createdAt": "2024-01-01T00:00:00Z",
      "updatedAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Advertisement updated successfully"
}
```

#### DELETE /api/v1/ads/{id}
Deletes an advertisement (requires admin privileges).

**Success Response (200):**
```json
{
  "success": true,
  "message": "Advertisement deleted successfully"
}
```

#### POST /api/v1/ads/{id}/interact
Records an interaction (view or click) with an advertisement.

**Request Body:**
```json
{
  "type": "view" // or "click"
}
```

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "interaction": {
      "id": "100",
      "userId": "1",
      "adId": "1",
      "type": "view",
      "earnings": 25,
      "timestamp": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Ad interaction recorded successfully"
}
```

### Marketplace Endpoints

#### GET /api/v1/products
Retrieves all available products in the marketplace.

**Query Parameters:**
- category (optional): Filter by category
- search (optional): Search term for product title/description
- minPrice (optional): Minimum price filter
- maxPrice (optional): Maximum price filter
- limit (optional): Number of records to return (default: 10)
- page (optional): Page number for pagination (default: 1)

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "products": [
      {
        "id": "1",
        "sellerId": "seller1",
        "title": "iPhone 14 Pro Max",
        "description": "Brand new iPhone 14 Pro Max 256GB in Deep Purple. Includes original accessories and warranty.",
        "price": 650000,
        "currency": "NGN",
        "category": "electronics",
        "images": [
          "https://api.visionhub.com/storage/products/1/image1.jpg",
          "https://api.visionhub.com/storage/products/1/image2.jpg"
        ],
        "status": "active",
        "stock": 5,
        "location": "Lagos, Nigeria",
        "createdAt": "2024-01-20T00:00:00Z",
        "updatedAt": "2024-01-20T00:00:00Z"
      }
    ]
  },
  "meta": {
    "pagination": {
      "total": 1,
      "count": 1,
      "per_page": 10,
      "current_page": 1,
      "total_pages": 1
    }
  },
  "message": "Products retrieved successfully"
}
```

#### POST /api/v1/products
Creates a new product listing.

**Request Body:**
```json
{
  "title": "New Product",
  "description": "Description of the new product",
  "price": 25000,
  "category": "electronics",
  "images": [
    "https://example.com/image1.jpg",
    "https://example.com/image2.jpg"
  ],
  "stock": 10,
  "location": "Abuja, Nigeria"
}
```

**Success Response (201):**
```json
{
  "success": true,
  "data": {
    "product": {
      "id": "7",
      "sellerId": "1",
      "title": "New Product",
      "description": "Description of the new product",
      "price": 25000,
      "currency": "NGN",
      "category": "electronics",
      "images": [
        "https://api.visionhub.com/storage/products/7/image1.jpg",
        "https://api.visionhub.com/storage/products/7/image2.jpg"
      ],
      "status": "pending_review",
      "stock": 10,
      "location": "Abuja, Nigeria",
      "createdAt": "2024-01-20T10:00:00Z",
      "updatedAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Product created successfully"
}
```

#### GET /api/v1/products/{id}
Retrieves a specific product by ID.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "product": {
      "id": "1",
      "sellerId": "seller1",
      "title": "iPhone 14 Pro Max",
      "description": "Brand new iPhone 14 Pro Max 256GB in Deep Purple. Includes original accessories and warranty.",
      "price": 650000,
      "currency": "NGN",
      "category": "electronics",
      "images": [
        "https://api.visionhub.com/storage/products/1/image1.jpg",
        "https://api.visionhub.com/storage/products/1/image2.jpg"
      ],
      "status": "active",
      "stock": 5,
      "location": "Lagos, Nigeria",
      "createdAt": "2024-01-20T00:00:00Z",
      "updatedAt": "2024-01-20T00:00:00Z"
    }
  },
  "message": "Product retrieved successfully"
}
```

#### PUT /api/v1/products/{id}
Updates an existing product listing.

**Request Body:**
```json
{
  "title": "Updated Product Title",
  "price": 30000,
  "stock": 8
}
```

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "product": {
      "id": "1",
      "sellerId": "seller1",
      "title": "Updated Product Title",
      "description": "Brand new iPhone 14 Pro Max 256GB in Deep Purple. Includes original accessories and warranty.",
      "price": 30000,
      "currency": "NGN",
      "category": "electronics",
      "images": [
        "https://api.visionhub.com/storage/products/1/image1.jpg",
        "https://api.visionhub.com/storage/products/1/image2.jpg"
      ],
      "status": "active",
      "stock": 8,
      "location": "Lagos, Nigeria",
      "createdAt": "2024-01-20T00:00:00Z",
      "updatedAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Product updated successfully"
}
```

#### DELETE /api/v1/products/{id}
Deletes a product listing.

**Success Response (200):**
```json
{
  "success": true,
  "message": "Product deleted successfully"
}
```

#### GET /api/v1/products/categories
Retrieves all available product categories.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "categories": [
      {
        "value": "electronics",
        "label": "Electronics"
      },
      {
        "value": "fashion",
        "label": "Fashion"
      },
      {
        "value": "home",
        "label": "Home & Living"
      },
      {
        "value": "books",
        "label": "Books"
      },
      {
        "value": "services",
        "label": "Services"
      },
      {
        "value": "digital",
        "label": "Digital Products"
      },
      {
        "value": "other",
        "label": "Other"
      }
    ]
  },
  "message": "Categories retrieved successfully"
}
```

### Courses Endpoints

#### GET /api/v1/courses
Retrieves all available courses.

**Query Parameters:**
- category (optional): Filter by category
- level (optional): Filter by difficulty level
- search (optional): Search term for course title/description
- limit (optional): Number of records to return (default: 10)
- page (optional): Page number for pagination (default: 1)

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "courses": [
      {
        "id": "1",
        "title": "Complete Web Development Course",
        "description": "Learn to build modern web applications with HTML, CSS, JavaScript, and React.",
        "instructor": "John Smith",
        "instructorImage": "https://api.visionhub.com/storage/instructors/1/image.jpg",
        "thumbnailUrl": "https://api.visionhub.com/storage/courses/1/thumbnail.jpg",
        "category": "programming",
        "level": "beginner",
        "duration": 1200,
        "lessonsCount": 50,
        "price": 15000,
        "originalPrice": 25000,
        "rating": 4.8,
        "studentsCount": 1250,
        "isEnrolled": false,
        "isPremium": false,
        "tags": ["web", "javascript", "react"],
        "createdAt": "2024-01-01T00:00:00Z",
        "updatedAt": "2024-01-01T00:00:00Z"
      }
    ]
  },
  "meta": {
    "pagination": {
      "total": 1,
      "count": 1,
      "per_page": 10,
      "current_page": 1,
      "total_pages": 1
    }
  },
  "message": "Courses retrieved successfully"
}
```

#### GET /api/v1/courses/{id}
Retrieves a specific course by ID.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "course": {
      "id": "1",
      "title": "Complete Web Development Course",
      "description": "Learn to build modern web applications with HTML, CSS, JavaScript, and React.",
      "instructor": "John Smith",
      "instructorImage": "https://api.visionhub.com/storage/instructors/1/image.jpg",
      "thumbnailUrl": "https://api.visionhub.com/storage/courses/1/thumbnail.jpg",
      "category": "programming",
      "level": "beginner",
      "duration": 1200,
      "lessonsCount": 50,
      "price": 15000,
      "originalPrice": 25000,
      "rating": 4.8,
      "studentsCount": 1250,
      "isEnrolled": false,
      "isPremium": false,
      "tags": ["web", "javascript", "react"],
      "createdAt": "2024-01-01T00:00:00Z",
      "updatedAt": "2024-01-01T00:00:00Z"
    }
  },
  "message": "Course retrieved successfully"
}
```

#### POST /api/v1/courses/{id}/enroll
Enrolls the authenticated user in a course.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "enrollment": {
      "id": "100",
      "userId": "1",
      "courseId": "1",
      "progress": 0,
      "completedLessons": [],
      "enrolledAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Successfully enrolled in course"
}
```

#### GET /api/v1/courses/my-enrollments
Retrieves all courses the authenticated user is enrolled in.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "enrollments": [
      {
        "id": "100",
        "userId": "1",
        "courseId": "1",
        "progress": 25,
        "completedLessons": ["1", "2", "3"],
        "enrolledAt": "2024-01-20T10:00:00Z",
        "course": {
          "id": "1",
          "title": "Complete Web Development Course",
          "thumbnailUrl": "https://api.visionhub.com/storage/courses/1/thumbnail.jpg",
          "instructor": "John Smith",
          "duration": 1200,
          "lessonsCount": 50
        }
      }
    ]
  },
  "message": "Enrollments retrieved successfully"
}
```

#### PUT /api/v1/courses/{id}/progress
Updates the user's progress in a course.

**Request Body:**
```json
{
  "lessonId": "4",
  "completed": true
}
```

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "enrollment": {
      "id": "100",
      "userId": "1",
      "courseId": "1",
      "progress": 30,
      "completedLessons": ["1", "2", "3", "4"],
      "enrolledAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Progress updated successfully"
}
```

### Brain Teasers Endpoints

#### GET /api/v1/brain-teasers
Retrieves all available brain teasers.

**Query Parameters:**
- category (optional): Filter by category
- difficulty (optional): Filter by difficulty level
- limit (optional): Number of records to return (default: 10)
- page (optional): Page number for pagination (default: 1)

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "brainTeasers": [
      {
        "id": "1",
        "title": "Logic Puzzle",
        "question": "If all Bloops are Razzies and some Razzies are Loppies, then are all Bloops definitely Loppies?",
        "options": [
          "Yes",
          "No",
          "Maybe",
          "Cannot be determined"
        ],
        "correctAnswer": 1,
        "explanation": "Since only some Razzies are Loppies, we cannot conclude that all Bloops (which are all Razzies) are Loppies.",
        "difficulty": "medium",
        "category": "logic",
        "points": 20,
        "timeLimit": 60,
        "imageUrl": "https://api.visionhub.com/storage/brainteasers/1/image.jpg",
        "createdAt": "2024-01-01T00:00:00Z"
      }
    ]
  },
  "meta": {
    "pagination": {
      "total": 1,
      "count": 1,
      "per_page": 10,
      "current_page": 1,
      "total_pages": 1
    }
  },
  "message": "Brain teasers retrieved successfully"
}
```

#### GET /api/v1/brain-teasers/random
Retrieves a random brain teaser.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "brainTeaser": {
      "id": "1",
      "title": "Logic Puzzle",
      "question": "If all Bloops are Razzies and some Razzies are Loppies, then are all Bloops definitely Loppies?",
      "options": [
        "Yes",
        "No",
        "Maybe",
        "Cannot be determined"
      ],
      "difficulty": "medium",
      "category": "logic",
      "points": 20,
      "timeLimit": 60,
      "imageUrl": "https://api.visionhub.com/storage/brainteasers/1/image.jpg",
      "createdAt": "2024-01-01T00:00:00Z"
    }
  },
  "message": "Random brain teaser retrieved successfully"
}
```

#### POST /api/v1/brain-teasers/{id}/attempt
Records an attempt at solving a brain teaser.

**Request Body:**
```json
{
  "selectedAnswer": 1
}
```

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "attempt": {
      "id": "500",
      "userId": "1",
      "brainTeaserId": "1",
      "selectedAnswer": 1,
      "isCorrect": true,
      "pointsEarned": 20,
      "timeSpent": 25,
      "attemptedAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Attempt recorded successfully"
}
```

#### GET /api/v1/brain-teasers/stats
Retrieves brain teaser statistics for the authenticated user.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "stats": {
      "totalAttempts": 25,
      "correctAnswers": 18,
      "totalPoints": 450,
      "averageTime": 32,
      "streakCount": 3,
      "bestStreak": 7,
      "categoryStats": {
        "logic": {
          "attempts": 10,
          "correct": 8,
          "points": 160
        },
        "math": {
          "attempts": 8,
          "correct": 5,
          "points": 100
        },
        "riddle": {
          "attempts": 7,
          "correct": 5,
          "points": 190
        }
      }
    }
  },
  "message": "Brain teaser stats retrieved successfully"
}
```

### Transactions Endpoints

#### GET /api/v1/transactions
Retrieves transaction history for the authenticated user.

**Query Parameters:**
- type (optional): Filter by transaction type (earning, withdrawal, payout, bonus, referral)
- status (optional): Filter by transaction status (pending, completed, failed, cancelled)
- limit (optional): Number of records to return (default: 10)
- page (optional): Page number for pagination (default: 1)

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "transactions": [
      {
        "id": "1",
        "userId": "1",
        "type": "earning",
        "amount": 250.00,
        "currency": "NGN",
        "status": "completed",
        "description": "Earning from Ad View",
        "createdAt": "2024-01-20T08:00:00Z",
        "updatedAt": "2024-01-20T08:00:00Z"
      }
    ]
  },
  "meta": {
    "pagination": {
      "total": 1,
      "count": 1,
      "per_page": 10,
      "current_page": 1,
      "total_pages": 1
    }
  },
  "message": "Transactions retrieved successfully"
}
```

#### POST /api/v1/withdrawals
Creates a new withdrawal request.

**Request Body:**
```json
{
  "amount": 5000,
  "paymentMethod": {
    "type": "bank",
    "name": "Bank Transfer"
  },
  "accountDetails": {
    "accountName": "John Doe",
    "accountNumber": "1234567890",
    "bankName": "First Bank"
  }
}
```

**Success Response (201):**
```json
{
  "success": true,
  "data": {
    "withdrawal": {
      "id": "100",
      "userId": "1",
      "amount": 5000,
      "currency": "NGN",
      "paymentMethod": {
        "type": "bank",
        "name": "Bank Transfer",
        "minAmount": 1000,
        "maxAmount": 100000,
        "processingTime": "1-3 business days",
        "fees": 50
      },
      "accountDetails": {
        "accountName": "John Doe",
        "accountNumber": "1234567890",
        "bankName": "First Bank"
      },
      "status": "pending",
      "requestedAt": "2024-01-20T10:00:00Z"
    }
  },
  "message": "Withdrawal request submitted successfully"
}
```

#### GET /api/v1/withdrawals
Retrieves withdrawal history for the authenticated user.

**Query Parameters:**
- status (optional): Filter by status (pending, completed, failed, cancelled)
- limit (optional): Number of records to return (default: 10)
- page (optional): Page number for pagination (default: 1)

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "withdrawals": [
      {
        "id": "100",
        "userId": "1",
        "amount": 5000,
        "currency": "NGN",
        "paymentMethod": {
          "type": "bank",
          "name": "Bank Transfer",
          "minAmount": 1000,
          "maxAmount": 100000,
          "processingTime": "1-3 business days",
          "fees": 50
        },
        "accountDetails": {
          "accountName": "John Doe",
          "accountNumber": "1234567890",
          "bankName": "First Bank"
        },
        "status": "pending",
        "requestedAt": "2024-01-20T10:00:00Z"
      }
    ]
  },
  "meta": {
    "pagination": {
      "total": 1,
      "count": 1,
      "per_page": 10,
      "current_page": 1,
      "total_pages": 1
    }
  },
  "message": "Withdrawals retrieved successfully"
}
```

#### PUT /api/v1/withdrawals/{id}/cancel
Cancels a pending withdrawal request.

**Success Response (200):**
```json
{
  "success": true,
  "data": {
    "withdrawal": {
      "id": "100",
      "userId": "1",
      "amount": 5000,
      "currency": "NGN",
      "paymentMethod": {
        "type": "bank",
        "name": "Bank Transfer"
      },
      "accountDetails": {
        "accountName": "John Doe",
        "accountNumber": "1234567890",
        "bankName": "First Bank"
      },
      "status": "cancelled",
      "requestedAt": "2024-01-20T10:00:00Z",
      "processedAt": "2024-01-20T11:00:00Z"
    }
  },
  "message": "Withdrawal request cancelled successfully"
}
```

## Error Handling

The API uses standard HTTP status codes to indicate the success or failure of requests:

- 200: OK - Request successful
- 201: Created - Resource created successfully
- 400: Bad Request - Invalid request parameters
- 401: Unauthorized - Authentication required
- 403: Forbidden - Insufficient permissions
- 404: Not Found - Resource not found
- 422: Unprocessable Entity - Validation errors
- 500: Internal Server Error - Server error

## Rate Limiting

To prevent abuse, the API implements rate limiting:
- 60 requests per minute per IP address
- 1000 requests per hour per authenticated user

When rate limits are exceeded, the API returns a 429 (Too Many Requests) status code.

## Versioning

The API uses URL versioning with the version number included in the path:
- v1: Current stable version

## Security

- All API requests must be made over HTTPS
- Authentication is handled via Laravel Sanctum tokens
- Passwords are securely hashed using bcrypt
- Input validation is performed on all endpoints
- SQL injection prevention through Eloquent ORM
- Cross-site request forgery (CSRF) protection